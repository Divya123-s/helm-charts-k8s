name: Create build for nginx app

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - '.github/**'
  workflow_dispatch:


jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_SECRETS_REGION }}
          role-session-name: aws_session

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build
        env:
          DOCKERFILE: "./Dockerfile"
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: "nginx-repo"
          VERSION: "nginx-${{ github.sha }}"
        run: docker build -f $DOCKERFILE -t $REGISTRY/$REPOSITORY:$VERSION .

      - name: Push
        if: ${{ inputs.push }}
        env:
          DOCKERFILE: "./Dockerfile"
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: "nginx-repo"
          VERSION: "nginx-${{ github.sha }}"
        run: docker push $REGISTRY/$REPOSITORY:$VERSION


      - name: Get Image URI
        id: image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: "nginx-repo"
          VERSION: "nginx-${{ github.sha }}"
        run: |
          IMAGE_ID=$REGISTRY/$REPOSITORY:$VERSION
          echo "image_id=${IMAGE_ID}" >> "$GITHUB_OUTPUT"

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Update Image Version in the kubernetes yaml file
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'helm/Values.yaml'
          propertyPath: 'deployment.image.uri'
          value: ${{ steps.image.outputs.image_id }}
          repository: PoornachandS/helm-chart-k8s
          branch: ${{ steps.extract_branch.outputs.branch }}
          commitChange: true
          createPR: false
          targetBranch: ${{ steps.extract_branch.outputs.branch }}
          force: true
          message: 'Update Image Version to ${{ steps.image.outputs.image_id }}'
          token: ${{ secrets.GITHUB_TOKEN }}
